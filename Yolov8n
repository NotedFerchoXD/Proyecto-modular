import cv2
from ultralytics import YOLO

# Cargar el modelo YOLOv8 preentrenado
model = YOLO("yolov8n.pt")  # Asegúrate de que 'yolov8n.pt' esté disponible o se descargue

def detector():
    cap = cv2.VideoCapture(0)

    while cap.isOpened():
        status, frame = cap.read()
        if not status:
            break

        # Hacer inferencia en el frame
        results = model(frame)

        # Iterar sobre los resultados y obtener las coordenadas de los bounding boxes
        for result in results:
            for box in result.boxes:
                # Extraer las coordenadas del bounding box
                bbox = box.xyxy[0].cpu().numpy().astype(int)  # Coordenadas (xmin, ymin, xmax, ymax)
                confidence = float(box.conf[0])  # Convertir a float antes de redondear
                class_id = int(box.cls[0])  # ID de la clase

                # Dibujar el bounding box
                cv2.rectangle(frame, (bbox[0], bbox[1]), (bbox[2], bbox[3]), (255, 255, 0), 2)
                # Mostrar la etiqueta de clase y la confianza
                cv2.putText(frame,
                            f" {round(confidence, 4)}",
                            (bbox[0], bbox[1] - 15),
                            cv2.FONT_HERSHEY_PLAIN,
                            1, (255, 255, 255), 2)

        # Mostrar el frame con las detecciones
        cv2.imshow("frame", frame)

        if cv2.waitKey(10) & 0xFF == ord('q'):
            break

    cap.release()
    cv2.destroyAllWindows()

if __name__ == '__main__':
    detector()
